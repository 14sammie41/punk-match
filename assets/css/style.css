/* Google fonts as attributed in README file */
@import url('https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap');

/* CSS variables - colours pulled from imgonline.com and fonts from Google fonts - attributed on README file */
:root {
    --primary-font: 'PT Serif', serif;
    --primary-color: #452a99;
    --secondary-color: #d534b8;
    --text-color: #1c082e;
    --highlight-color: #279de5;
    /* --secondary-highlight-color: #ca2227; don't know if needed yet - it's red */
}

/* Global styles */
body {
    background-color: var(--highlight-color);
    display: flex;
    height: 100vh;
    /* Padding added to keep the navbar from overlapping the rest of the content */
    padding-top: 60px;
}

h1,
h2,
p {
    color: var(--text-color);
    font-family: var(--primary-font);
    text-align: center;
    margin: 0;
    padding: 1rem;
}

.navbar {
    background-color: var(--secondary-color) !important;
    color: var(--text-color) !important;
    font-family: var(--primary-font) !important;
    /* The following CSS is designed to put the navbar at the top of the page and make it responsive */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000; /* This will make sure the navbar is always on top of the game */
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

.btn {
    color: var(--text-color);
    background-color: var(--secondary-color);
    font-family: var(--primary-font);
}

/* This CSS makes the button responsive and centers it on the scrren */
.container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

/* Styles for the game including card styles */
.memory-game {
    width: 640px;
    height: 640px;
    margin: 10px auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 900px; /* Adding the 3D element to the flip to make it more pronounced */
}

.memory-card {
    width: calc(25% - 10px);
    height: calc(33.333% - 10px);
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px var(--text-color);
    border-radius: 5px;
    transform: scale(1); /* This adds to the :active pseudo-class to make the card shrink and pop when clicked */
    transform-style: preserve-3d; /* This will stop the transformation from reverting */
    transition: transform 0.5s ease; /* The transformation will be more pronounced */
}

/* Using the :active pseudo-class to show the user which cards they have clicked. */
.memory-card:active {
    transform: scale(0.95);
    transition: transform 0.1s ease;
}

.front-face, 
.back-face {
    width: 100%;
    height: 100%;
    padding: 5px;
    position: absolute;
    border-radius: 5px;
    background: #d534b8;
    backface-visibility: hidden; /* This will mean that when the card flips it will show the front face */
}

.front-face {
    transform: rotateY(180deg); /* This will cause the front face to become visible when clicked. */
}

/* CSS to link to the JavaScript forEach card to make them flip when clicked */
.memory-card.flip {
    transform: rotateY(180deg);
}

/* Media queries to make the game responsive on smaller screens */
@media screen and (max-width: 768px) {
    .memory-game {
        width: 100%;
        height: 100%;
        margin: 0;
    }

    .memory-card {
        width: calc(25% - 10px);
        height: calc(33.333% - 10px);
    }
}